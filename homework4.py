# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.

# count_1 = int(input("Введите первое число: "))
# count_2 = int(input("Введите второе число: "))
# set_1 = set()
# set_2 = set()
# for _ in range(count_1):
#     values_1 = int(input("Введите значение из первого множества: "))
#     set_1.add(values_1)
# for _ in range(count_2):
#     values_2 = int(input("Введите значение из второго множества: "))
#     set_2.add(values_2)
# print(set_1, set_2)
# print(*sorted(set_1 & set_2))

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на 
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai
#  ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.


blueberry_list = [int(input("Сколько ягод на кусте: ")) for _ in range(int(input("Количество кустов: ")))]
print(blueberry_list)
sum_list = []
for i in range(-2, len(blueberry_list) - 2):
    sum_1 = blueberry_list[i] + blueberry_list[i + 1] +  blueberry_list[i + 2]
    sum_list.append(sum_1)
print(sum_list)
print(max(sum_list))